#include <Arduino.h>
#include <SpotifyArduino.h>
#include <GxGDE0213B72B/GxGDE0213B72B.h> // 2.13" b/w


#define MAX_LENGTH_PER_LINE 22 // this is the maximum amount of text characters per line of the screen

#define uS_TO_S_FACTOR 1000000ULL // Conversion factor for micro seconds to seconds

const char *scannables_root_ca = // this certificate is for scannables.scdn.co to get the scan link
    "-----BEGIN CERTIFICATE-----\n"
    "MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\n"
    "MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\n"
    "d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\n"
    "QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\n"
    "MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\n"
    "b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\n"
    "9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\n"
    "CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\n"
    "nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\n"
    "43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\n"
    "T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\n"
    "gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\n"
    "BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\n"
    "TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\n"
    "DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\n"
    "hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\n"
    "06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\n"
    "PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\n"
    "YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\n"
    "CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\n"
    "-----END CERTIFICATE-----";

const char *scannablesURL = "https://scannables.scdn.co/uri/plain/svg/ffffff/black/256/";

const unsigned char spotifyLogo[] PROGMEM = {
    0xff, 0xff, 0xe0, 0x1f, 0xff, 0xfc, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfc, 0xff, 0xf8, 0x00, 0x00,
    0x7f, 0xfc, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xfc, 0xff, 0xc0, 0x00, 0x00, 0x0f, 0xfc, 0xff, 0x00,
    0x00, 0x00, 0x03, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc,
    0xf8, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xf0, 0x00, 0x00, 0x00,
    0x00, 0x3c, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xe0, 0x0f, 0xff, 0xc0, 0x00, 0x1c, 0xc0, 0xff,
    0xff, 0xfe, 0x00, 0x0c, 0xc1, 0xff, 0xff, 0xff, 0xc0, 0x0c, 0x81, 0xff, 0xff, 0xff, 0xf8, 0x04,
    0x81, 0xff, 0xff, 0xff, 0xfc, 0x04, 0x81, 0xe0, 0x00, 0x0f, 0xfe, 0x04, 0x80, 0x00, 0x00, 0x01,
    0xfe, 0x04, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x0c, 0x00, 0x00, 0x7f,
    0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x00,
    0x00, 0x70, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xf0, 0x00, 0x80, 0x00, 0xf8, 0x00, 0x70, 0x04, 0x80, 0x3f, 0xff, 0xe0, 0x00, 0x04, 0x80, 0x7f,
    0xff, 0xfc, 0x00, 0x04, 0x80, 0x7f, 0xff, 0xff, 0x00, 0x04, 0xc0, 0x20, 0x00, 0x3f, 0x80, 0x0c,
    0xc0, 0x00, 0x00, 0x07, 0x80, 0x0c, 0xe0, 0x00, 0x00, 0x01, 0x80, 0x1c, 0xe0, 0x00, 0x00, 0x00,
    0x00, 0x1c, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xf8, 0x00,
    0x00, 0x00, 0x00, 0x7c, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xfc,
    0xff, 0x00, 0x00, 0x00, 0x03, 0xfc, 0xff, 0xc0, 0x00, 0x00, 0x0f, 0xfc, 0xff, 0xe0, 0x00, 0x00,
    0x1f, 0xfc, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0xfc, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfc, 0xff, 0xff,
    0xe0, 0x1f, 0xff, 0xfc};

void showLines(String text, int maxLines, int y, GxEPD_Class display);
void setDisplayNotListening(GxEPD_Class display);
void drawSpotifyScan(int x, int y, int lengths[24], GxEPD_Class display);
void drawRoundedLines(int distanceBetween, int width, int lengths[], int count, int x, int y, GxEPD_Class display);
void drawRoundedLine(int height, int width, int x, int y, GxEPD_Class display);
void printCurrentlyPlayingToSerial(CurrentlyPlaying currentlyPlaying);
